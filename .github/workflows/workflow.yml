name: Default Workflow
on:
  push:
    branches:
      - master
  pull_request:
jobs:
  test:
    name: test
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: true
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
          check-latest: true
          cache: true
        id: go
      - run: go test ./... -cover
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
          check-latest: true
      - uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout 2m
  release:
    if: startsWith(github.ref, 'refs/tags/v')
    name: release
    needs: [test, lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
          check-latest: true
          cache: true
      - run: CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o release/linux-amd64/dd-dns
      - run: CGO_ENABLED=0 GOOS=linux GOARCH=386 go build -o release/linux-386/dd-dns
      - run: CGO_ENABLED=0 GOOS=linux GOARCH=arm go build -o release/linux-arm/dd-dns
      - run: CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -o release/darwin-amd64/dd-dns
      - run: CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o release/windows-amd64/dd-dns.exe
      - run: CGO_ENABLED=0 GOOS=windows GOARCH=386 go build -o release/windows-386/dd-dns.exe
      - run: |
          for PLATFORM in $(find ./release -mindepth 1 -maxdepth 1 -type d); do
            OSARCH=$(basename ${PLATFORM})
            echo "--> ${OSARCH}"
            pushd "${PLATFORM}" >/dev/null 2>&1
            zip "../${OSARCH}.zip" ./*
            popd >/dev/null 2>&1
            rm -rf "${PLATFORM}/"
          done
      - uses: softprops/action-gh-release@v1
        with:
          files: release/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
