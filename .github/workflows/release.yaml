name: Release artifacts
on:
  release:
    types: [published]
jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v5
      - name: Docker Hub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Github Packages Login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: |
            wdullaer/dd-dns
            ghcr.io/${{ github.repository }}
      - uses: docker/build-push-action@v6
        with:
          context: .
          pull: true
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  artifacts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v6
        with:
          go-version-file: 'go.mod'
          check-latest: true
          cache: true
      - run: CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o release/linux-amd64/dd-dns
      - run: CGO_ENABLED=0 GOOS=linux GOARCH=386 go build -o release/linux-386/dd-dns
      - run: CGO_ENABLED=0 GOOS=linux GOARCH=arm go build -o release/linux-arm/dd-dns
      - run: CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -o release/darwin-amd64/dd-dns
      - run: CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o release/windows-amd64/dd-dns.exe
      - run: CGO_ENABLED=0 GOOS=windows GOARCH=386 go build -o release/windows-386/dd-dns.exe
      - run: |
          for PLATFORM in $(find ./release -mindepth 1 -maxdepth 1 -type d); do
            OSARCH=$(basename ${PLATFORM})
            echo "--> ${OSARCH}"
            pushd "${PLATFORM}" >/dev/null 2>&1
            zip "../${OSARCH}.zip" ./*
            popd >/dev/null 2>&1
            rm -rf "${PLATFORM}/"
          done
      - uses: softprops/action-gh-release@v2
        with:
          files: release/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}